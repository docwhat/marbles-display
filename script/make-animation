#!/usr/bin/env bash

set -euo pipefail

scad=$1
num_frames=50
start_angle=0
size="256,256"

# Temporary directory (and cleanup).
tempdir=$(mktemp -d)
trap 'rm -rf "$tempdir"' EXIT

filenames=()
cameras=()

for i in $(seq 1 "${num_frames}"); do
  angle=$(((start_angle - (i * 360 / num_frames)) % 360))
  printf -v outfile '%s/frame_%05d.png' "${tempdir}" "$i"
  translate="0,0,0"
  rot="${angle},0.0,180.0"
  dist=100

  filenames+=("${outfile}")
  cameras+=("${translate},${rot},${dist}")
done

openscad_args=(
  nice
  openscad
  "${scad}"
  "--quiet"
  "--o={1}"
  "--imgsize=$size"
  "--export-format=png"
  "--colorscheme=Tomorrow"
  "--camera={2}"
)

# Check if it supports fast-csg.
if openscad \
  "${scad}" \
  "--quiet" \
  "--enable=fast-csg" \
  "--o=/dev/null" \
  "--export-format=png" \
  "--imgsize=1,1"; then
  printf 'INFO: Using fast-csg.\n'
  openscad_args+=("--enable=fast-csg")
else
  printf 'WARN: fast-csg is not supported. This will be slow.\n'
fi

# Run it!
parallel \
  --bar \
  --jobs '85%' \
  "${openscad_args[@]}" \
  ::: "${filenames[@]}" \
  :::+ "${cameras[@]}"

convert \
  "${tempdir}/frame_*.png" \
  -set delay 1x15 \
  "${scad/%.scad/.gif}"

# EOF
